const express = require('express');
const app = express();

app.use(express.json()); // Middleware to parse JSON

const products = [
  { id: 1, name: "mi" },
  { id: 2, name: "iphone" },
  { id: 3, name: "oppo" }
];

// Root route
app.get('/', (req, res) => {
  res.send('Hello, World!');
});

// Get all products
app.get('/products', (req, res) => {
  res.send(products);
});

// Get product by ID
app.get('/products/:id', (req, res) => {
  const newData = products.filter(item => item.id.toString() === req.params.id);
  res.send(newData);
});

// Add a new product
app.post('/addproducts', (req, res) => {
  const { id, name } = req.body;
  const newProduct = { id, name };
  products.push(newProduct);
  res.send(newProduct);
});

// Update product by ID
app.put('/updateproducts/:id', (req, res) => {
  const product = products.find(item => item.id.toString() === req.params.id);
  if (!product) return res.status(404).send('Product not found');
  Object.assign(product, req.body);
  res.send(product);
});

// Delete product by ID
app.delete('/deleteproducts/:id', (req, res) => {
  const index = products.findIndex(item => item.id.toString() === req.params.id);
  if (index === -1) return res.status(404).send('Product not found');
  const deletedProduct = products.splice(index, 1);
  res.send(deletedProduct);
});

// Start server
app.listen(3000, () => {
  console.log('Server running on http://localhost:3000');
});
